{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "width": 400,
  "height": 250,
  "title": {
    "text": "Obesity Rate Around The World (20th October 2020)",
    "frame": "group"
  },
  "style": "cell",
  "data": [
    {"name": "highlight_store"},
    {"name": "select_store"},
    {
      "name": "source_1",
      "url": "https://raw.githubusercontent.com/Exteriors/FIT3179Assignment3/main/Assignment3/Fat_Supply_Quantity_Data.csv",
      "format": {"type": "csv", "delimiter": ","}
    },
    {
      "name": "source_0",
      "url": "https://raw.githubusercontent.com/Exteriors/FIT3179Assignment3/main/Assignment3/obeserate.json",
      "format": {"type": "topojson", "feature": "obeserate", "parse": {}},
      "transform": [
        {
          "type": "formula",
          "expr": "datum[\"properties\"] && datum[\"properties\"][\"name\"]",
          "as": "properties.name"
        },
        {"type": "identifier", "as": "_vgsid_"},
        {
          "type": "lookup",
          "from": "source_1",
          "key": "Country",
          "fields": ["properties.name"],
          "values": ["Obesity", "Population"]
        },
        {
          "type": "formula",
          "expr": "datum.Obesity/100",
          "as": "Confirmed per 10,000 population"
        },
        {
          "type": "formula",
          "expr": "(datum.Obesity/100)* datum.Population",
          "as": "Total Obese Population"
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"Obesity\"]) && isFinite(+datum[\"Obesity\"])"
        }
      ]
    }
  ],
  "projections": [
    {
      "name": "projection",
      "size": {"signal": "[width, height]"},
      "fit": {"signal": "data('source_0')"},
      "type": "equirectangular"
    }
  ],
  "signals": [
    {
      "name": "unit",
      "value": {},
      "on": [
        {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
      ]
    },
    {
      "name": "highlight",
      "update": "vlSelectionResolve(\"highlight_store\", \"union\")"
    },
    {
      "name": "select",
      "update": "vlSelectionResolve(\"select_store\", \"union\", true)"
    },
    {
      "name": "highlight_tuple",
      "on": [
        {
          "events": [{"source": "scope", "type": "mouseover"}],
          "update": "datum && item().mark.marktype !== 'group' ? {unit: \"\", fields: highlight_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"_vgsid_\"]]} : null",
          "force": true
        },
        {"events": [{"source": "scope", "type": "dblclick"}], "update": "null"}
      ]
    },
    {
      "name": "highlight_tuple_fields",
      "value": [{"type": "E", "field": "_vgsid_"}]
    },
    {
      "name": "highlight_modify",
      "on": [
        {
          "events": {"signal": "highlight_tuple"},
          "update": "modify(\"highlight_store\", highlight_tuple, true)"
        }
      ]
    },
    {
      "name": "select_tuple",
      "on": [
        {
          "events": [{"source": "scope", "type": "click"}],
          "update": "datum && item().mark.marktype !== 'group' ? {unit: \"\", fields: select_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"_vgsid_\"]]} : null",
          "force": true
        },
        {"events": [{"source": "scope", "type": "dblclick"}], "update": "null"}
      ]
    },
    {
      "name": "select_tuple_fields",
      "value": [{"type": "E", "field": "_vgsid_"}]
    },
    {
      "name": "select_toggle",
      "value": false,
      "on": [
        {
          "events": [{"source": "scope", "type": "click"}],
          "update": "event.shiftKey"
        },
        {"events": [{"source": "scope", "type": "dblclick"}], "update": "false"}
      ]
    },
    {
      "name": "select_modify",
      "on": [
        {
          "events": {"signal": "select_tuple"},
          "update": "modify(\"select_store\", select_toggle ? null : select_tuple, select_toggle ? null : true, select_toggle ? select_tuple : null)"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "marks",
      "type": "shape",
      "style": ["geoshape"],
      "interactive": true,
      "from": {"data": "source_0"},
      "encode": {
        "update": {
          "stroke": {"value": "black"},
          "cursor": {"value": "pointer"},
          "fill": {"scale": "color", "field": "Obesity"},
          "strokeWidth": [
            {
              "test": "(!(length(data(\"select_store\"))) || (vlSelectionTest(\"select_store\", datum))) && (length(data(\"select_store\")))",
              "value": 1.5
            },
            {
              "test": "(vlSelectionTest(\"highlight_store\", datum))",
              "value": 1
            },
            {"value": 0}
          ],
          "tooltip": {
            "signal": "{\"Country\": isValid(datum[\"properties.name\"]) ? datum[\"properties.name\"] : \"\"+datum[\"properties.name\"], \"Total Population\": format(datum[\"Population\"], \".2f\"), \"Total Obese Population\": format(datum[\"Total Obese Population\"], \".2f\"), \"Obesity Rate\": format(datum[\"Confirmed per 10,000 population\"], \".2%\")}"
          },
          "ariaRoleDescription": {"value": "geoshape"},
          "description": {
            "signal": "\"Obesity Rate (%): \" + (format(datum[\"Obesity\"], \"\")) + \"; Country: \" + (isValid(datum[\"properties.name\"]) ? datum[\"properties.name\"] : \"\"+datum[\"properties.name\"]) + \"; Total Population: \" + (format(datum[\"Population\"], \".2f\")) + \"; Total Obese Population: \" + (format(datum[\"Total Obese Population\"], \".2f\")) + \"; Obesity Rate: \" + (format(datum[\"Confirmed per 10,000 population\"], \".2%\"))"
          }
        }
      },
      "transform": [{"type": "geoshape", "projection": "projection"}]
    }
  ],
  "scales": [
    {
      "name": "color",
      "type": "linear",
      "domain": [10, 20, 40],
      "range": ["#fdbe85", "#fd8d3c", "#e6550d", "#a63603"],
      "interpolate": "hcl",
      "zero": false
    }
  ],
  "legends": [
    {
      "title": "Obesity Rate (%)",
      "fill": "color",
      "gradientLength": {"signal": "clamp(height, 64, 200)"}
    }
  ],
  "config": {}
}